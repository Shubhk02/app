name: AWS Production Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  ECR_FRONTEND_REPOSITORY: hospital-token-frontend
  ECR_BACKEND_REPOSITORY: hospital-token-backend
  EKS_CLUSTER_NAME: hospital-token-prod

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Python tests
      run: |
        cd backend
        pytest
      env:
        MONGO_URL: mongodb://localhost:27017
        DB_NAME: test_hospital_token_db
        JWT_SECRET_KEY: test-secret-key

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install frontend dependencies
      run: |
        cd frontend
        yarn install

    - name: Run frontend tests
      run: |
        cd frontend
        yarn test --watchAll=false

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_BACKEND_REPOSITORY }}:${{ github.sha }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_FRONTEND_REPOSITORY }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Get DocumentDB credentials
      run: |
        DOCDB_CREDS=$(aws secretsmanager get-secret-value --secret-id hospital-token-prod-docdb-credentials --query SecretString --output text)
        echo "MONGO_URL=$(echo $DOCDB_CREDS | jq -r .host)" >> $GITHUB_ENV
        echo "DB_NAME=$(echo $DOCDB_CREDS | jq -r .dbname)" >> $GITHUB_ENV

    - name: Deploy to EKS
      run: |
        # Update image tags in deployment files
        sed -i "s|your-registry/hospital-token-frontend:latest|${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_FRONTEND_REPOSITORY }}:${{ github.sha }}|g" k8s/deployment.yaml
        sed -i "s|your-registry/hospital-token-backend:latest|${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_BACKEND_REPOSITORY }}:${{ github.sha }}|g" k8s/deployment.yaml
        
        # Apply Kubernetes configurations
        kubectl apply -f k8s/deployment.yaml

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/frontend -n hospital-token-system
        kubectl rollout status deployment/backend -n hospital-token-system